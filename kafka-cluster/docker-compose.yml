
version: '2.4'
services:
  kafka:
    image: hypertrace/kafka-zookeeper:main
    networks:
      default:
        aliases:
          - kafka
          - zookeeper
    healthcheck:
      test: bin/kafka-cluster.sh cluster-id --bootstrap-server localhost:9093 || exit 1
      interval: 1s
      timeout: 60s
      retries: 60

  kafka-ui:
    image: provectuslabs/kafka-ui:master
    ports:
      - '8080:8080'
    environment:
      DYNAMIC_CONFIG_ENABLED: 'true'
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:9092
    depends_on:
      - kafka

#docker run -p8080:8080 -e KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS=localhost:9092 -e DYNAMIC_CONFIG_ENABLED=true provectuslabs/kafka-ui:master

#  kafka:
#    image: docker.io/bitnami/kafka:3.6
#    ports:
#      - "9092:9092"
#    volumes:
#      - "kafka_data:/bitnami"
#    environment:
#      # KRaft settings
#      - KAFKA_CFG_NODE_ID=0
#      - KAFKA_CFG_PROCESS_ROLES=controller,broker
#      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=0@kafka:9093
#      # Listeners
#      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093
#      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://:9092
#      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
#      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
#      - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=PLAINTEXT

volumes:
  kafka_data:
    driver: local
